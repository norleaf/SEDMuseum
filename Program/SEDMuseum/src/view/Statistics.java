/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import control.StatControl;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.print.PageFormat;
import java.awt.print.Printable;
import static java.awt.print.Printable.NO_SUCH_PAGE;
import static java.awt.print.Printable.PAGE_EXISTS;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.sql.SQLException;
import java.text.DateFormat;
import java.util.Calendar;
import java.util.Locale;

/**
 *
 * @author Annette
 */
public class Statistics extends javax.swing.JPanel implements Printable {

    private final ScreenFormat sf;
    private final Dimension screenSize;
    private final MainFrame mf;
    private final StatControl sc;

    public Statistics(MainFrame mf) {
        initComponents();
        this.mf = mf;
        sf = mf.getScreenFormat();
        screenSize = sf.getScreenSize();
        int topGapSmall = sf.getTopGapSmall();
        sc = new StatControl(mf.getShopControl().getTillControl().getTillHandler());
        jCalendarCombo2.setSize((int) (0.15 * screenSize.width), (int) (topGapSmall * 1.5));
        jScrollPane1.setLocation(screenSize.width / 2 - jScrollPane1.getWidth() / 2, topGapSmall * 2 + jCalendarCombo2.getHeight());
        jTable1.setSize(jCalendarCombo2.getWidth() + sf.getDefaultgap() + jButtonPrint.getWidth(), 78 * 8 + 5);
        jScrollPane1.setSize(jCalendarCombo2.getWidth() + sf.getDefaultgap() + jButtonPrint.getWidth(), 78 * 8 + 5);
        jTable1.setFont(sf.getFont());
        jTable1.setRowHeight(78);

        jCalendarCombo2.setLocation(jScrollPane1.getX(), topGapSmall);
        jCalendarCombo2.setFont(sf.getFont());
        DateFormat df = DateFormat.getDateInstance(DateFormat.LONG, new Locale("da", "DK"));
        jCalendarCombo2.setDateFormat(df);
        jTable1.setValueAt("Uge: " + jCalendarCombo2.getCalendar().get(Calendar.WEEK_OF_YEAR), 0, 0);
        jButtonHome.setLocation(sf.getDefaultgap(), topGapSmall);
        jButtonPrint.setFont(sf.getFont());
        jButtonPrint.setLocation(jCalendarCombo2.getX() + jCalendarCombo2.getWidth() + sf.getDefaultgap(), topGapSmall);
        jButtonPrint.setSize(jButtonPrint.getMinimumSize());
    }

    public void fillSTable(int store, int adults, int children, int adultGroups, int childrenGroups, int freebies, int visitorsTotal) {
        jTable1.setValueAt(store, 1, 1);
        jTable1.setValueAt(adults, 2, 1);
        jTable1.setValueAt(children, 3, 1);
        jTable1.setValueAt(adultGroups, 4, 1);
        jTable1.setValueAt(childrenGroups, 5, 1);
        jTable1.setValueAt(freebies, 6, 1);
        jTable1.setValueAt(visitorsTotal, 7, 1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonPrint = new javax.swing.JButton();
        jCalendarCombo2 = new org.freixas.jcalendar.JCalendarCombo();
        jButtonHome = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setBackground(java.awt.Color.darkGray);
        setMaximumSize(new java.awt.Dimension(1266, 768));
        setPreferredSize(new java.awt.Dimension(1266, 768));
        setLayout(null);

        jButtonPrint.setFont(new java.awt.Font("Tahoma", 0, 21)); // NOI18N
        jButtonPrint.setText("Udskriv");
        jButtonPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPrintActionPerformed(evt);
            }
        });
        add(jButtonPrint);
        jButtonPrint.setBounds(570, 10, 115, 43);

        jCalendarCombo2.addDateListener(new org.freixas.jcalendar.DateListener() {
            public void dateChanged(org.freixas.jcalendar.DateEvent evt) {
                jCalendarCombo2DateChanged(evt);
            }
        });
        add(jCalendarCombo2);
        jCalendarCombo2.setBounds(40, 10, 155, 20);

        jButtonHome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/home-icon.png"))); // NOI18N
        jButtonHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonHomeActionPerformed(evt);
            }
        });
        add(jButtonHome);
        jButtonHome.setBounds(930, 10, 50, 50);

        jScrollPane1.setBorder(null);
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {"Forretning", null},
                {"Voksne Entré", null},
                {"Børn Entré", null},
                {"Grupper Voksne", null},
                {"Grupper Børn", null},
                {"Gratister", null},
                {"I alt", null}
            },
            new String [] {
                "", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
        }

        add(jScrollPane1);
        jScrollPane1.setBounds(280, 90, 450, 404);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPrintActionPerformed
        if (jTable1.getValueAt(1, 1) != null && !jTable1.getValueAt(1, 1).toString().isEmpty()) {
            PrinterJob job = PrinterJob.getPrinterJob();
            Printable doc = this;
            job.setPrintable(doc);
            boolean accept = job.printDialog();
            if (accept) {
                try {
                    job.print();
                } catch (PrinterException ex) {
                    System.out.println(ex.getLocalizedMessage());
                    new ErrorPopup("Printeren kunne ikke udskrive.<br/><br/>Tjek om den er tændt/tilsluttet.");
                }
            }
        }
    }

    @Override
    public int print(Graphics g, PageFormat pf, int page) throws PrinterException {
        int printResult;
        if (page > 0) {
            printResult = NO_SUCH_PAGE;
        } else {
            if (page == 0) {
                Graphics2D g2d = (Graphics2D) g;
                double x0 = pf.getImageableX() + 50;
                double y0 = pf.getImageableY() + 50;
                g2d.translate(x0, y0);
                jTable1.printAll(g);
            }
                // Find øverste venstre hjørne i det printbare område
            // Forskyd g2d, så (0,0) svarer til øverste venstre hjørne

            //     drawLines(g2d, page);
            printResult = PAGE_EXISTS;
        }
        return printResult;
    }//GEN-LAST:event_jButtonPrintActionPerformed

    private void jCalendarCombo2DateChanged(org.freixas.jcalendar.DateEvent evt) {//GEN-FIRST:event_jCalendarCombo2DateChanged
        if (evt.getSelectedDate().get(Calendar.MINUTE) == 0) {
            Calendar cal = (Calendar) evt.getSelectedDate().clone();
            jTable1.setValueAt("Uge: " + cal.get(Calendar.WEEK_OF_YEAR), 0, 0);
            genStat(cal);
        }
    }//GEN-LAST:event_jCalendarCombo2DateChanged

    private void jButtonHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonHomeActionPerformed
        mf.showCard("Forside");
    }//GEN-LAST:event_jButtonHomeActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonHome;
    private javax.swing.JButton jButtonPrint;
    private org.freixas.jcalendar.JCalendarCombo jCalendarCombo2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    public void genStat(Calendar cal) {
        try {
            sc.generateStatistics(cal, this);
        } catch (SQLException ex) {
            System.out.println(ex.getErrorCode() + ": " + ex.getLocalizedMessage());
            System.out.println("fault in genstat - statistics");
            ErrorPopup ep = new ErrorPopup("Statistik kunne ikke genereres.<br/>Databasen kan ikke finde de nødvendige tabeller. <br/><br/>Kontakt Carl på tlf +45 2077 2521");
        }
    }

}
